--// RebleCadet Storage Finder (Ein-Script-Version)
--// Einfach in StarterPlayerScripts als LocalScript einf√ºgen

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ServerStorage = game:GetService("ServerStorage")
local Lighting = game:GetService("Lighting")
local Workspace = game:GetService("Workspace")
local player = Players.LocalPlayer

-- === GUI ERSTELLEN ===
local gui = Instance.new("ScreenGui")
gui.Name = "RebleCadetStorageViewer"
gui.ResetOnSpawn = false
gui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 440, 0, 400)
frame.Position = UDim2.new(0, 30, 0, 80)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BackgroundTransparency = 0.1
frame.BorderSizePixel = 0
frame.Parent = gui

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -20, 0, 36)
title.Position = UDim2.new(0, 10, 0, 8)
title.BackgroundTransparency = 1
title.Text = "üîç RebleCadet Storage Finder"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextXAlignment = Enum.TextXAlignment.Left
title.Font = Enum.Font.SourceSansBold
title.TextSize = 18
title.Parent = frame

local refresh = Instance.new("TextButton")
refresh.Size = UDim2.new(0, 90, 0, 28)
refresh.Position = UDim2.new(1, -100, 0, 8)
refresh.Text = "üîÑ Refresh"
refresh.Font = Enum.Font.SourceSans
refresh.TextSize = 14
refresh.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
refresh.TextColor3 = Color3.new(1,1,1)
refresh.Parent = frame

local scroll = Instance.new("ScrollingFrame")
scroll.Size = UDim2.new(1, -20, 1, -60)
scroll.Position = UDim2.new(0, 10, 0, 48)
scroll.BackgroundTransparency = 1
scroll.ScrollBarThickness = 8
scroll.Parent = frame

local list = Instance.new("UIListLayout", scroll)
list.Padding = UDim.new(0,6)
list.SortOrder = Enum.SortOrder.LayoutOrder

local function makeEntry(text)
	local entry = Instance.new("TextLabel")
	entry.Size = UDim2.new(1, -4, 0, 60)
	entry.BackgroundTransparency = 0.4
	entry.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
	entry.TextWrapped = true
	entry.TextXAlignment = Enum.TextXAlignment.Left
	entry.TextYAlignment = Enum.TextYAlignment.Top
	entry.Font = Enum.Font.SourceSans
	entry.TextSize = 14
	entry.TextColor3 = Color3.fromRGB(255,255,255)
	entry.RichText = true
	entry.Text = text
	entry.Parent = scroll
end

-- === SUCHFUNKTION ===
local patterns = {"reble", "rebel", "cadet", "storage", "storeg"}

local function nameMatches(name)
	if not name then return false end
	local lower = string.lower(name)
	for _, pat in ipairs(patterns) do
		if string.find(lower, pat, 1, true) then
			return true
		end
	end
	return false
end

local function scanAll()
	local sources = {
		{name = "Workspace", ref = Workspace},
		{name = "ServerStorage", ref = ServerStorage},
		{name = "ReplicatedStorage", ref = ReplicatedStorage},
		{name = "Lighting", ref = Lighting},
	}

	local found = {}
	for _, s in ipairs(sources) do
		for _, obj in ipairs(s.ref:GetDescendants()) do
			if nameMatches(obj.Name) then
				table.insert(found, string.format("[%s] %s (%s)", s.name, obj:GetFullName(), obj.ClassName))
			end
		end
	end
	return found
end

-- === ANZEIGE ===
local function refreshList()
	for _, c in ipairs(scroll:GetChildren()) do
		if c:IsA("TextLabel") then c:Destroy() end
	end

	local found = scanAll()
	if #found == 0 then
		makeEntry("‚ö†Ô∏è Keine passenden Objekte gefunden.\n(Suche: reble, rebel, cadet, storage, storeg)")
	else
		for _, text in ipairs(found) do
			makeEntry("‚úÖ " .. text)
		end
	end

	task.wait()
	local total = 0
	for _, c in ipairs(scroll:GetChildren()) do
		if c:IsA("TextLabel") then total += c.Size.Y.Offset + 6 end
	end
	scroll.CanvasSize = UDim2.new(0,0,0,total+20)
end

refresh.MouseButton1Click:Connect(refreshList)
refreshList()
